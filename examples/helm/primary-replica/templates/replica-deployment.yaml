apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{.Values.ReplicaName}}"
  labels:
    name: "{{.Values.ReplicaName}}"
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/created": {{.Release.Time.Seconds | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: "{{.Values.ReplicaName}}"
  template:
    metadata:
      labels:
        name: "{{.Values.ReplicaName}}"
      name: "{{.Values.ReplicaName}}"
    spec:
      containers:
      - env:
        - name: PGHOST
          value: /tmp
        - name: PG_PRIMARY_HOST
          value: "{{.Values.PrimaryName}}"
        - name: PG_PRIMARY_PORT
          value: "5432"
        - name: PG_MODE
          value: slave
        - name: PG_PRIMARY_USER
          value: primary
        - name: PG_PRIMARY_PASSWORD
          value: "{{.Values.PrimaryPassword}}"
        - name: PG_USER
          value: testuser
        - name: PG_PASSWORD
          value: "{{.Values.UserPassword}}"
        - name: PG_DATABASE
          value: userdb
        - name: PG_ROOT_PASSWORD
          value: "{{.Values.RootPassword}}"
        image: "{{.Values.PostgresImage}}"
        imagePullPolicy: IfNotPresent
        name: "{{.Values.ReplicaName}}"
        ports:
        - containerPort: 5432
          protocol: TCP
        resources:
          requests:
            cpu: {{default "100m" .Values.Cpu}}
            memory: {{default "100M" .Values.Memory}}
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /pgdata
          name: pgdata
        - mountPath: /backup
          name: backup
          readOnly: true
        - mountPath: /pguser
          name: pguser-volume
        - mountPath: /pgprimary
          name: pgprimary-volume
        - mountPath: /pgroot
          name: pgroot-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: pgdata
      - emptyDir: {}
        name: backup
      - name: pguser-volume
        secret:
         secretName: pguser-secret
      - name: pgprimary-volume
        secret:
         secretName: pgprimary-secret
      - name: pgroot-volume
        secret:
         secretName: pgroot-secret
