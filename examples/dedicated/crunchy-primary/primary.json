{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "crunchy-primary",
        "annotations": {
            "description": "Crunchy primary PostgreSQL database using dynamic storage",
            "iconClass": "icon-database",
            "tags": "crunchy,database,postgresql"
        }
    },
    "parameters": [{
        "name": "NAME",
        "description": "The name of the database and service",
        "value": "primary"
    }, {
        "name": "PG_PRIMARY_PORT",
        "description": "The postgresql port",
        "value": "5432"
    }, {
        "name": "PG_PRIMARY_USER",
        "description": "The username used for primary / replica replication",
        "value": "primaryuser"
    }, {
        "name": "PGDATA_PATH_OVERRIDE",
        "description": "override for the pgdata path",
        "value": "primary"
    }, {
        "name": "CCP_IMAGE_TAG",
        "description": "The image tag to use",
        "value": "rhel7-10.3-1.8.2"
    }, {
        "name": "CCP_IMAGE_PREFIX",
        "description": "The image prefix to use",
        "value": "crunchydata"
    }, {
        "name": "CCP_IMAGE_NAME",
        "description": "The image name to use",
        "value": "crunchy-postgres"
    }, {
        "name": "PG_PRIMARY_PASSWORD",
        "description": "The password for the PG primary user",
        "value": "password"
    }, {
        "name": "PG_USER",
        "description": "The username that clients will use to connect to PG server",
        "value": "testuser"
    }, {
        "name": "PG_PASSWORD",
        "description": "The password for the PG primary user",
        "value": "password"
    }, {
        "name": "PG_DATABASE",
        "description": "The name of the database that will be created",
        "value": "userdb"
    }, {
        "name": "STORAGE_CLASS",
        "description": "The name for the storage class",
        "value": "gluster-container"
    }, {
        "name": "PVC_NAME",
        "description": "The name for the PVC",
        "value": "primary-pvc"
    }, {
        "name": "PVC_SIZE",
        "description": "The size for the PVC",
        "value": "300M"
    }, {
        "name": "PVC_ACCESS_MODE",
        "description": "The access mode for the PVC",
        "value": "ReadWriteOnce"
    }, {
        "name": "PG_ROOT_PASSWORD",
        "description": "The password for the PG administrator",
        "value": "password"
    }, {
        "name": "SYNC_REPLICA",
        "description": "the sync replicas that will be allowed to connect if any",
        "value": ""
    }, {
        "name": "TEMP_BUFFERS",
        "value": "9MB",
        "description": "The postgres temp_buffers setting"
    }, {
        "name": "MAX_CONNECTIONS",
        "description": "The postgres max_connections setting",
        "value": "101"
    }, {
        "name": "SHARED_BUFFERS",
        "description": "The postgres shared_buffers setting",
        "value": "129MB"
    }, {
        "name": "MAX_WAL_SENDERS",
        "description": "The postgres max_wal_senders setting",
        "value": "7"
    }, {
        "name": "WORK_MEM",
        "description": "The postgres work_mem setting",
        "value": "5MB"

    }],

    "objects": [{
        "kind": "PersistentVolumeClaim",
        "apiVersion": "v1",
        "metadata": {
            "name": "${PVC_NAME}",
            "annotations": {
                 "volume.beta.kubernetes.io/storage-class": "${STORAGE_CLASS}"
            }
        },
        "spec": {
            "accessModes": [
                "${PVC_ACCESS_MODE}"
            ],
            "resources": {
                "requests": {
                    "storage": "${PVC_SIZE}"
                }
            }
        }
    }, {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
            "name": "${NAME}",
            "labels": {
                "name": "${NAME}"
            }
        },
        "spec": {
            "ports": [{
                "protocol": "TCP",
                "port": 5432,
                "targetPort": 5432,
                "nodePort": 0
            }],
            "selector": {
                "name": "${NAME}"
            },
            "type": "ClusterIP",
            "sessionAffinity": "None"
        }
    }, {
        "kind": "Deployment",
        "apiVersion": "extensions/v1beta1",
        "metadata": {
            "name": "${NAME}",
            "labels": {
                "name": "${NAME}"
            }
        },
        "spec": {
            "replicas": 1,
            "selector": {
                "matchLabels": {
                    "name": "${NAME}"
                }
            },
            "template": {
                "metadata": {
                    "labels": {
                        "name": "${NAME}"
                    }
                },
                "spec": {
                    "containers": [{
                        "name": "server",
                        "image": "${CCP_IMAGE_PREFIX}/${CCP_IMAGE_NAME}:${CCP_IMAGE_TAG}",
                        "env": [{
                            "name": "PG_PRIMARY_PORT",
                            "value": "${PG_PRIMARY_PORT}"
                        }, {
                            "name": "PG_MODE",
                            "value": "primary"
                        }, {
                            "name": "PGDATA_PATH_OVERRIDE",
                            "value": "${PGDATA_PATH_OVERRIDE}"
                        }, {
                            "name": "PG_PRIMARY_USER",
                            "value": "${PG_PRIMARY_USER}"
                        }, {
                            "name": "PG_PRIMARY_PASSWORD",
                            "value": "${PG_PRIMARY_PASSWORD}"
                        }, {
                            "name": "PG_USER",
                            "value": "${PG_USER}"
                        }, {
                            "name": "PG_PASSWORD",
                            "value": "${PG_PASSWORD}"
                        }, {
                            "name": "PG_DATABASE",
                            "value": "${PG_DATABASE}"
                        }, {
                            "name": "PG_ROOT_PASSWORD",
                            "value": "${PG_ROOT_PASSWORD}"
                        }, {
                            "name": "SYNC_REPLICA",
                            "value": "${SYNC_REPLICA}"
                        }, {
                            "name": "TEMP_BUFFERS",
                            "value": "${TEMP_BUFFERS}"
                        }, {
                            "name": "MAX_CONNECTIONS",
                            "value": "${MAX_CONNECTIONS}"
                        }, {
                            "name": "SHARED_BUFFERS",
                            "value": "${SHARED_BUFFERS}"
                        }, {
                            "name": "MAX_WAL_SENDERS",
                            "value": "${MAX_WAL_SENDERS}"
                        }, {
                            "name": "WORK_MEM",
                            "value": "${WORK_MEM}"
                        }, {
                            "name": "PGHOST",
                            "value": "/tmp"
                        }],
                        "volumeMounts": [{
                            "mountPath": "/pgdata",
                            "name": "pgdata",
                            "readOnly": false
                        }],

                        "ports": [{
                            "containerPort": 5432,
                            "protocol": "TCP"
                        }],
                        "resources": {},
                        "imagePullPolicy": "Always"
                    }],
                    "volumes": [{
                        "name": "pgdata",
                        "persistentVolumeClaim": {
                            "claimName": "${PVC_NAME}"
                        }
                    }],

                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {}
                }
            },
            "strategy": {
                "type": "RollingUpdate",
                "rollingUpdate": {
                    "maxUnavailable": 1,
                    "maxSurge": 1
                }
            }
        }
    }]
}
